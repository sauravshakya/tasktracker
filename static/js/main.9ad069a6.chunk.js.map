{"version":3,"sources":["components/Button.jsx","components/Header.jsx","components/ComponentStyle.jsx","components/Task.jsx","components/Tasks.jsx","components/AddTask.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","CrossIcon","styled","div","TaskSpacing","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","day","CloseCircleOutlined","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","htmlFor","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAIMA,EAAS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAQC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAC5B,OACI,wBAAQC,MAAO,CAAEC,gBAAiBJ,GAAQE,QAAUA,EAAUG,UAAU,MAAxE,SAAiFJ,KAGzFF,EAAOO,aAAe,CAClBN,MAAO,aASID,QCdTQ,EAAS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QAC5B,OACI,yBAAQL,UAAU,SAAlB,UACI,6BAAMG,IACN,cAAC,EAAD,CAAQR,MAAQU,EAAU,MAAQ,QAAUT,KAAOS,EAAU,QAAU,MAAQR,QAASO,QAKpGF,EAAOD,aAAe,CAClBE,MAAO,gBAOID,I,IAAAA,I,sBCpBFI,EAAYC,IAAOC,IAAV,gJAQTC,EAAcF,IAAOC,IAAV,wDCQTE,EAdF,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAC3B,OACI,sBAAKb,UAAS,eAAUW,EAAKG,SAAW,WAAa,IAAMC,cAAe,kBAAMF,EAASF,EAAKK,KAA9F,UACI,eAACP,EAAD,WACI,6BAAKE,EAAKf,OACV,4BAAIe,EAAKM,SAEb,cAACX,EAAD,UACI,cAACY,EAAA,EAAD,CAAqBrB,QAAS,kBAAMe,EAASD,EAAKK,aCAnDG,EAVD,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAQR,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC/B,OACI,mCACKO,EAAMC,KAAK,SAACV,GAAD,OACR,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,SAAUA,EAAUC,SAAUA,GAAnDF,EAAKK,UCkCjBM,EAtCC,SAAC,GAAe,IAAblB,EAAY,EAAZA,MACf,EAAwBmB,mBAAS,IAAjC,mBAAO3B,EAAP,KAAa4B,EAAb,KACA,EAAsBD,mBAAS,IAA/B,mBAAON,EAAP,KAAYQ,EAAZ,KACA,EAA+BF,oBAAS,GAAxC,mBAAOT,EAAP,KAAgBY,EAAhB,KAeA,OACI,uBAAM1B,UAAU,WAAW2B,SAdd,SAACC,GACdA,EAAEC,eAAeD,GACZhC,GAILQ,EAAM,CAAER,OAAMqB,MAAKH,aAEnBU,EAAQ,IACRC,EAAO,IACPC,GAAY,IAPRI,MAAM,sBAWV,UACI,sBAAK9B,UAAU,eAAf,UACI,uBAAO+B,QAAQ,GAAf,kBACA,uBAAOC,KAAK,OAAOC,YAAY,WAAWC,MAAOtC,EAAMuC,SAAU,SAACP,GAAD,OAAOJ,EAAQI,EAAEQ,OAAOF,aAE7F,sBAAKlC,UAAU,eAAf,UACI,uBAAO+B,QAAQ,GAAf,0BACA,uBAAOC,KAAK,OAAOC,YAAY,mBAAmBC,MAAOjB,EAAKkB,SAAU,SAACP,GAAD,OAAOH,EAAOG,EAAEQ,OAAOF,aAEnG,sBAAKlC,UAAU,kCAAf,UACI,uBAAO+B,QAAQ,GAAf,0BACA,uBAAOC,KAAK,WAAWK,QAASvB,EAAUoB,MAAOpB,EAAUqB,SAAU,SAACP,GAAD,OAAOF,EAAYE,EAAEU,cAAcD,eAG5G,uBAAOL,KAAK,SAASE,MAAM,YAAYlC,UAAU,sBCwB9CuC,EAtDH,WACV,MAAsChB,oBAAS,GAA/C,mBAAQiB,EAAR,KAAoBC,EAApB,KACA,EAAyBlB,mBAAS,CAChC,CACEP,GAAI,EACJpB,KAAM,uBACNqB,IAAK,oBACLH,UAAU,GAEZ,CACEE,GAAI,EACJpB,KAAM,oBACNqB,IAAK,oBACLH,UAAU,GAEZ,CACEE,GAAI,EACJpB,KAAM,gBACNqB,IAAK,oBACLH,UAAU,KAjBd,mBAAOM,EAAP,KAAasB,EAAb,KAyCA,OACE,sBAAK1C,UAAU,YAAf,UACE,cAAC,EAAD,CAAQI,MAAO,kBAAMqC,GAAiBD,IAAcnC,QAAWmC,IAC9DA,GAAe,cAAC,EAAD,CAASpC,MAtBb,SAACO,GACf,IAAMK,EAAK2B,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,EACzCC,EAAO,aAAK9B,MAAOL,GACzB+B,EAAS,GAAD,mBAAKtB,GAAL,CAAY0B,QAoBjB1B,EAAM2B,OAAS,EACd,cAAC,EAAD,CAAO3B,MAAOA,EAAOR,SAhBR,SAACI,GAClB0B,EAAStB,EAAM4B,QAAO,SAACrC,GAAD,OAAUA,EAAKK,KAAOA,OAeGH,SAX1B,SAACG,GACtB0B,EACEtB,EAAMC,KAAI,SAACV,GAAD,OAAUA,EAAKK,KAAOA,EAAZ,2BAAsBL,GAAtB,IAA4BG,UAAYH,EAAKG,WAAaH,SASC,uBCzCtEsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9ad069a6.chunk.js","sourcesContent":["// import PropTypes from 'prop-types'\n\nimport { checkPropTypes } from \"prop-types\";\n\nconst Button = ({ color , text, onClick }) =>{\n    return (\n        <button style={{ backgroundColor: color}} onClick={ onClick } className='btn' >{ text }</button>\n    );\n}\nButton.defaultProps = {\n    color: 'steelblue',\n}\n\n// Button.PropTypes = {\n//     text: PropTypes.string,\n//     color: PropTypes.string,\n//     onClick: PropTypes.func,\n// }\n\nexport default Button","import PropTypes from 'prop-types';\n// import {} from './ComponentStyle';\nimport Button from './Button'\n\n\nconst Header = ({ title, onAdd, showAdd }) =>{\n    return (\n        <header className='header'>\n            <h1>{ title }</h1>\n            <Button color={ showAdd ? 'red' : 'green' } text={ showAdd ? 'Close' : 'Add' } onClick={onAdd} />\n        </header>\n    );\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker',\n}\n\nHeader.propTypes = {\n    title : PropTypes.string.isRequired,\n}\n\nexport default Header;","import styled from 'styled-components';\n \nexport const CrossIcon = styled.div`\n    display: inline-block;\n    color: red;\n    font-size: 25px;\n    margin-right: 10px;\n    cursor: pointer;\n\n`;\nexport const TaskSpacing = styled.div`\n    display: inline-block;\n`;","import {CloseCircleOutlined} from '@ant-design/icons';\n// import reactDom from 'react-dom';\nimport {CrossIcon, TaskSpacing} from './ComponentStyle.jsx';\n\nconst Task = ({task, onDelete, onToggle}) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\n            <TaskSpacing>\n                <h3>{task.text}</h3>\n                <p>{task.day}</p>\n            </TaskSpacing>\n            <CrossIcon>\n                <CloseCircleOutlined onClick={() => onDelete(task.id)} />\n            </CrossIcon>\n        </div>\n    )\n} \n\nexport default Task","import Task from './Task'\n\nconst Tasks = ({ tasks , onDelete, onToggle }) => {\n    return (    \n        <>\n            {tasks.map( (task) => (\n                <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\n            ))}\n        </>    \n    );\n}\n\nexport default Tasks","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder,setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault(e)\n        if (!text){\n            alert('Please add a task')\n            return\n        }\n        onAdd({ text, day, reminder})\n\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return(\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label htmlFor=\"\">Task</label>\n                <input type=\"text\" placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)} />\n            </div>\n            <div className='form-control'>\n                <label htmlFor=\"\">Day and Time</label>\n                <input type=\"text\" placeholder='Add day and time' value={day} onChange={(e) => setDay(e.target.value)} />\n            </div>\n            <div className='form-control form-control-check'>\n                <label htmlFor=\"\">Set Reminder</label>\n                <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\n            </div>\n\n            <input type=\"submit\" value='Save Task' className='btn btn-block' />\n        </form>\n    )\n}\n\nexport default AddTask","import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport { useState } from 'react'  \n\nconst App = () => {\n  const [ showAddTask,setShowAddTask] = useState(true)\n  const [tasks,setTasks] = useState([\n    {\n      id: 1,\n      text: 'Docters Appoointment',\n      day: 'Feb 5th at 2:30pm',\n      reminder: true,\n    },  \n    {\n      id: 2,\n      text: 'Meeting at School',\n      day: 'Feb 6th at 1:30pm',\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: 'Food Shopping',\n      day: 'Feb 5th at 2:30pm',\n      reminder: false,\n    }\n  ]);\n\n  //Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n    // console.log(id)\n  }\n\n  // Delete task\n  const deleteTask = (id) =>{\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  //Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) => task.id === id ? { ...task, reminder : !task.reminder } : task )\n      )\n  }\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask (!showAddTask)} showAdd = {showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? ( \n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> ) : ('No tasks to show')\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}